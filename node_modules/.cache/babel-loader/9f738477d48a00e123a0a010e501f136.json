{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Shamit/CodeProjects/react_project/src/components/Products/ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Input from './Input';\nimport './ProductForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductForm = props => {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      children: \"Add To Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter valid amount (1 to 5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/mnt/c/Shamit/CodeProjects/react_project/src/components/Products/ProductForm.js"],"names":["useRef","useState","Button","Input","ProductForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AAEA,QAAIA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IAAqCF,mBAAmB,GAAG,CAA3D,IAAgEA,mBAAmB,GAAG,CAA1F,EAA6F;AACzFR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACH;;AAEDF,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AACH,GAZD;;AAcA,sBACI;AAAM,IAAA,QAAQ,EAAEN,aAAhB;AAAA,4BACI,QAAC,KAAD;AACA,MAAA,GAAG,EAAED,cADL;AAEA,MAAA,KAAK,EAAC,QAFN;AAGA,MAAA,KAAK,EAAE;AACHW,QAAAA,EAAE,EAAE,YAAYd,KAAK,CAACc,EADnB;AAEHC,QAAAA,IAAI,EAAE,QAFH;AAGHC,QAAAA,GAAG,EAAE,GAHF;AAIHC,QAAAA,GAAG,EAAC,GAJD;AAKHC,QAAAA,IAAI,EAAC,GALF;AAMHC,QAAAA,YAAY,EAAC;AANV;AAHP;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,EAaM,CAAClB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApCD;;GAAMF,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Input from './Input';\r\nimport './ProductForm.css';\r\n\r\nconst ProductForm = props => {\r\n    const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n    const amountInputRef = useRef();\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const enteredAmount = amountInputRef.current.value;\r\n        const enteredAmountNumber = +enteredAmount;\r\n\r\n        if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\r\n            setAmountIsValid(false);\r\n            return;\r\n        }\r\n\r\n        props.onAddToCart(enteredAmountNumber);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <Input\r\n            ref={amountInputRef} \r\n            label=\"Amount\" \r\n            input={{\r\n                id: 'amount_' + props.id,\r\n                type: 'number',\r\n                min: '1',\r\n                max:'5',\r\n                step:'1',\r\n                defaultValue:'1'\r\n            }}/>\r\n            <Button variant=\"primary\">Add To Card</Button>\r\n            { !amountIsValid && <p>Please enter valid amount (1 to 5).</p>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProductForm;"]},"metadata":{},"sourceType":"module"}